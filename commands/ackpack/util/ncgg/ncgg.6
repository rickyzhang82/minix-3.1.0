.\" $Id: ncgg.6,v 1.3 2005/09/01 12:13:34 beng Exp $
.TH NCGG 6 "$Revision: 1.3 $"
.ad
.SH NAME
cgg \- Code table translating utility
.SH SYNOPSIS
.B ~em/lib.bin/cgg
[-c] [-d] [-v] table
.SH DESCRIPTION
cgg translates a machine description table into the internal
structures needed by em_cg.
Flags recognized are:
.IP -c
Write one of the largest arrays in binary form on the file code.
The resulting code generator must be run in the same directory,
but compile time of the code generator will be less.
Useful during table debugging.
.IP -d
Generate pseudo code for table debugging.
This gives better information when the resulting code generator
is run with the debug flag on.
It also generates the file lineset that can be used as the
bittable described under the -u option of em_ncg(6).
.IP -v
Give statistics about table usage at end of program.
Normally only the tables that have been used more than 75%
are reported.
.SH FILES
tables.H, tables.c
.br
code	If the -c flag was given
.br
lineset	If the -d flag was given
.SH "SEE ALSO"
ack(1), em_ncg(6)
.PD 0
.IP [1]
A.S. Tanenbaum, Hans van Staveren, Ed Keizer and Johan
Stevenson "Description of a machine architecture for use with
block structured languages" Informatica report IR-81.
.IP [2]
Hans van Staveren "The table driven code generator from the
Amsterdam Compiler Kit, Second revised edition"
.SH AUTHOR
Hans van Staveren, Vrije Universiteit
