#!/usr/bin/make
#
# Minix compiler sources makefile
# (C) 2005 Michael Kennett

h = h
m = modules/h
s = modules/src
u = util

# Build directories
l = image
o = obj

# executables used only in the build (e.g. LLgen)
x = $o/bin

default : $l/em_pc

# Many headers are generated - debugcst is representative
$o/pc/debugcst.h : lang/pc/comp/Parameters
	cd $o/pc && awk -f../../$u/shf/mk.hfiles.awk ../../lang/pc/comp/Parameters

PC_NEXT_FILES = lang/pc/comp/def.str lang/pc/comp/type.str lang/pc/comp/node.str lang/pc/comp/scope.str \
		lang/pc/comp/desig.str lang/pc/comp/tmpvar.C lang/pc/comp/casestat.C

$o/pc/next.c : $(PC_NEXT_FILES)
	awk -flang/pc/comp/next.awk $(PC_NEXT_FILES) > $@

$o/pc/sym2str.c : lang/pc/comp/tokenname.c
	awk -flang/pc/comp/tokcase.awk lang/pc/comp/tokenname.c > $@

$o/pc/def.h : lang/pc/comp/def.str
	sed -f lang/pc/comp/allocd.sed < lang/pc/comp/def.str > $@
$o/pc/type.h : lang/pc/comp/type.str
	sed -f lang/pc/comp/allocd.sed < lang/pc/comp/type.str > $@
$o/pc/scope.h : lang/pc/comp/scope.str
	sed -f lang/pc/comp/allocd.sed < lang/pc/comp/scope.str > $@
$o/pc/node.h : lang/pc/comp/node.str
	sed -f lang/pc/comp/allocd.sed < lang/pc/comp/node.str > $@
$o/pc/desig.h : lang/pc/comp/desig.str
	sed -f lang/pc/comp/allocd.sed < lang/pc/comp/desig.str > $@
$o/pc/tmpvar.c : lang/pc/comp/tmpvar.C
	sed -f lang/pc/comp/allocd.sed < lang/pc/comp/tmpvar.C > $@
$o/pc/casestat.c : lang/pc/comp/casestat.C
	sed -f lang/pc/comp/allocd.sed < lang/pc/comp/casestat.C > $@

$o/pc/declar.g : lang/pc/comp/declar.g
	cp lang/pc/comp/declar.g $@
$o/pc/expression.g : lang/pc/comp/expression.g
	cp lang/pc/comp/expression.g $@
$o/pc/program.g : lang/pc/comp/program.g
	cp lang/pc/comp/program.g $@
$o/pc/statement.g : lang/pc/comp/statement.g
	cp lang/pc/comp/statement.g $@

$o/pc/tokenfile.g : lang/pc/comp/tokenname.c
	sed -f lang/pc/comp/tokenfile.sed < lang/pc/comp/tokenname.c > $@

PC_LLGEN_C = $o/pc/tokenfile.c $o/pc/program.c $o/pc/declar.c \
		$o/pc/expression.c $o/pc/statement.c $o/pc/Lpars.c

PC_LLGEN_G = $o/pc/tokenfile.g $o/pc/program.g $o/pc/declar.g \
		$o/pc/expression.g $o/pc/statement.g

PC_LLGEN_G2 = tokenfile.g program.g declar.g expression.g statement.g

# Several files are generated by LLgen - use Lpars.c as representative
$o/pc/Lpars.c : $(PC_LLGEN_G) $x/LLgen
	cd $o/pc && ../../$x/LLgen -a -v -P../../$u/LLgen/lib $(PC_LLGEN_G2)

$o/pc/tokenfile.c : $o/pc/Lpars.c
$o/pc/program.c : $o/pc/Lpars.c
$o/pc/declar.c : $o/pc/Lpars.c
$o/pc/expression.c : $o/pc/Lpars.c
$o/pc/statement.c : $o/pc/Lpars.c

$o/pc/char.c : lang/pc/comp/char.tab $x/tabgen
	$x/tabgen -flang/pc/comp/char.tab > $@

GEN_FILES = $o/pc/debugcst.h $o/pc/def.h $o/pc/type.h $o/pc/scope.h \
		$o/pc/node.h $o/pc/desig.h $(PC_LLGEN_C)

CPC = -I$h -I$m -I$s/alloc -I$s/flt_arith -I$s/idf -I$s/input -I$s/string -I$s/system -I$o -I$o/pc -Ilang/pc/comp -DSTATIC=static -DNDEBUG

$o/pc/body.o : lang/pc/comp/body.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/body.c
$o/pc/casestat.o : $o/pc/casestat.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/casestat.c
$o/pc/char.o : $o/pc/char.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/char.c
$o/pc/chk_expr.o : lang/pc/comp/chk_expr.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/chk_expr.c
$o/pc/code.o : lang/pc/comp/code.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/code.c
$o/pc/cstoper.o : lang/pc/comp/cstoper.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/cstoper.c
$o/pc/declar.o : $o/pc/declar.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/declar.c
$o/pc/def.o : lang/pc/comp/def.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/def.c
$o/pc/desig.o : lang/pc/comp/desig.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/desig.c
$o/pc/enter.o : lang/pc/comp/enter.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/enter.c
$o/pc/error.o : lang/pc/comp/error.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/error.c
$o/pc/expression.o : $o/pc/expression.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/expression.c
$o/pc/idf.o : lang/pc/comp/idf.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/idf.c
$o/pc/input.o : lang/pc/comp/input.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/input.c
$o/pc/label.o : lang/pc/comp/label.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/label.c
$o/pc/LLlex.o : lang/pc/comp/LLlex.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/LLlex.c
$o/pc/LLmessage.o : lang/pc/comp/LLmessage.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/LLmessage.c
$o/pc/lookup.o : lang/pc/comp/lookup.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/lookup.c
$o/pc/Lpars.o : $o/pc/Lpars.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/Lpars.c
$o/pc/main.o : lang/pc/comp/main.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/main.c
$o/pc/misc.o : lang/pc/comp/misc.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/misc.c
$o/pc/next.o : $o/pc/next.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/next.c
$o/pc/node.o : lang/pc/comp/node.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/node.c
$o/pc/options.o : lang/pc/comp/options.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/options.c
$o/pc/program.o : $o/pc/program.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/program.c
$o/pc/progs.o : lang/pc/comp/progs.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/progs.c
$o/pc/readwrite.o : lang/pc/comp/readwrite.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/readwrite.c
$o/pc/scope.o : lang/pc/comp/scope.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/scope.c
$o/pc/stab.o : lang/pc/comp/stab.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/stab.c
$o/pc/statement.o : $o/pc/statement.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/statement.c
$o/pc/sym2str.o : $o/pc/sym2str.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/sym2str.c
$o/pc/tmpvar.o : $o/pc/tmpvar.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/tmpvar.c
$o/pc/tokenfile.o : $o/pc/tokenfile.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) $o/pc/tokenfile.c
$o/pc/tokenname.o : lang/pc/comp/tokenname.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/tokenname.c
$o/pc/type.o : lang/pc/comp/type.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/type.c
$o/pc/typequiv.o : lang/pc/comp/typequiv.c
	$(CC) -c -o $@ $(CFLAGS) $(CPC) lang/pc/comp/typequiv.c

PC_OBJS = $o/pc/body.o $o/pc/casestat.o $o/pc/char.o $o/pc/chk_expr.o \
		$o/pc/code.o $o/pc/cstoper.o $o/pc/declar.o $o/pc/def.o \
		$o/pc/desig.o $o/pc/enter.o $o/pc/error.o $o/pc/expression.o \
		$o/pc/idf.o $o/pc/input.o $o/pc/label.o $o/pc/LLlex.o \
		$o/pc/LLmessage.o $o/pc/lookup.o $o/pc/Lpars.o $o/pc/main.o \
		$o/pc/misc.o $o/pc/next.o $o/pc/node.o $o/pc/options.o \
		$o/pc/program.o $o/pc/progs.o $o/pc/readwrite.o $o/pc/scope.o \
		$o/pc/stab.o $o/pc/statement.o $o/pc/sym2str.o $o/pc/tmpvar.o \
		$o/pc/tokenfile.o $o/pc/tokenname.o $o/pc/type.o $o/pc/typequiv.o

$l/em_pc : $(GEN_FILES) $(PC_OBJS) $o/libmodule.a $o/libem_data.a $o/libem_mes.a $o/libemk.a
	$(CC) -o $@ $(PC_OBJS) -L$o -lem_data -lem_mes -lemk -lmodule

